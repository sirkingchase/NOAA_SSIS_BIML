<Biml xmlns="http://schemas.varigence.com/biml.xsd">
<Packages>
    <Package Name="PickupLoad" ConstraintMode="Linear" ProtectionLevel="EncryptSensitiveWithUserKey"  >
        <Connections>
            <!--  Force creating connection managers  -->
            <Connection ConnectionName="Realtime NDBC Meteorological" />
            <Connection ConnectionName="FF Meteorological" />                
        </Connections>
        <Variables>
            <#@ include file="Variables.biml" #>
        </Variables>
        <Tasks>
            <Dataflow Name="Cache Meteorological Data">
                <Transformations>
                    <OleDbSource Name="Meteorological Source" ConnectionName="NOAA MS SQL" >
                        <DirectInput>SELECT [Date],[StationId],[WindDirection],[WindSpeed],[WindGust],[WaveHeight],[DominantWavePeriod],[AverageWavePeriod],
                        [WaveDirection],[SeaLevelPressue],[AirTemperature],[WaterTemperature] FROM [NOAA].[dbo].[ndbc_meteorological];
                        </DirectInput>
                    </OleDbSource>
                    <Cache Name="Meteorological Cache" ConnectionName="MeteorologicalLookupCache">
                        <InputPath OutputPathName="Meteorological Source.Output"></InputPath>
                    </Cache>
                </Transformations>
            </Dataflow>
            <#=CallBimlScript(@"NDBC_Meteo_Script_Task.biml") #>
            <Dataflow Name="Process FF">
                <Transformations>
                    <FlatFileSource ConnectionName="FF Meteorological" Name="FF SRC"></FlatFileSource>
                    <DataConversion Name="FF DataType Conv" >
                        <ErrorHandling ErrorRowDisposition="IgnoreFailure" TruncationRowDisposition="IgnoreFailure" />
                        <InputPath OutputPathName="FF SRC.Output"></InputPath>
                        <Columns>
                        <# 
                        var metoColumns = RootNode.Tables.First(w => w.Name.Equals("ndbc_meteorological")).Columns;
                        var dataType = new Dictionary<DbType, string>() { { DbType.AnsiStringFixedLength, "AnsiString" } };
                        foreach(var column in metoColumns.Where(w => ! string.IsNullOrEmpty(w.GetTag("FF_COL")) ) ) {
                        #>
                            <Column SourceColumn="<#=column.GetTag("FF_COL")#>"  TargetColumn="<#=column.Name#>" 
                            DataType="<#=column.DataType#>"  />
                        <#  } #>
                        </Columns>
                    </DataConversion>
                    <DerivedColumns Name="Column Value Calculation">
                        <InputPath OutputPathName="FF DataType Conv.Output"></InputPath>
                        <Columns>
                        <# 
                        foreach(var column in metoColumns.Where(w => ! string.IsNullOrEmpty(w.GetTag("D_Expr")) ) ) {
                            string columnType = dataType.FirstOrDefault(w => w.Key == column.DataType).Value;
                            if (string.IsNullOrEmpty(columnType)) { 
                            #>
                            <Column Name="<#=column.Name#>" DataType="<#=column.DataType#>" 
                                ReplaceExisting="<#=( ! string.IsNullOrEmpty(column.GetTag("FF_COL")) ).ToString().ToLower()#>">
                            <#=column.GetTag("D_Expr")#>
                            </Column>
                          <#  } else {  #>
                            <Column Name="<#=column.Name#>"  DataType="<#=columnType#>" Length="<#=column.Length#>" CodePage="1252"
                                ReplaceExisting="<#=( ! string.IsNullOrEmpty(column.GetTag("FF_COL")) ).ToString().ToLower()#>">
                            <#=column.GetTag("D_Expr")#>
                            </Column>
                        <#} }#>
                        </Columns>
                    </DerivedColumns>
                </Transformations>
            </Dataflow>
        </Tasks>
    </Package>
</Packages>
</Biml>
<#@ template language="C#" tier="4"#>	
<#@ import namespace="System.Data" #>	